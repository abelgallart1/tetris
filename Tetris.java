/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tetris;

import com.sun.glass.events.KeyEvent;
import javax.swing.JButton;
import java.util.Timer;
import java.util.TimerTask;
import java.awt.Color;
import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;

/**
 *
 * @author abel
 */
public class Tetris extends javax.swing.JFrame {

    /**
     * Creates new form Tetris
     */
    
    JButton [][]matris;
    Timer paso;
    TimerTask baja;
    Figura f;
    Random ran=new Random();
    int dimx=20;
    int dimy=27;
    int puntos=0;
    int cont=0;
    int nivel=0;  
    Clip clip;
    AudioInputStream audio2;
    
    public Tetris() {
        initComponents();
        try {
                audio2 = AudioSystem.getAudioInputStream(getClass().getResourceAsStream("/tetris/tetris.wav"));
                clip = AudioSystem.getClip();
                clip.open(audio2);
                clip.start();
                
            } catch (Exception ex) {
                ex.printStackTrace();
            } 
        matris=new JButton[dimx][dimy];
        for(int x=0;x<dimx;x++)
        for(int y=0;y<dimy;y++)
        {matris[x][y]=new JButton();
         matris[x][y].setBackground(new Color(240,240,240));
         Tablero.add(matris[x][y],new org.netbeans.lib.awtextra.AbsoluteConstraints(x*20, y*20, 25, 25));
        
         }   
       
       f=new L(matris);
       f.baja();
      
       paso=new Timer();
       baja=new TimerTask() { public void run() {
       if (!clip.isActive()) try {
                audio2 = AudioSystem.getAudioInputStream(getClass().getResourceAsStream("/tetris/tetris.wav"));
                clip = AudioSystem.getClip();
                clip.open(audio2);
                clip.start();
                
            } catch (Exception ex) {
                ex.printStackTrace();
            } 
           
       for(int x=0;x<dimx;x++) if (!matris[x][0].getBackground().equals(new Color(240,240,240))) cont++;
                                
        if (cont>5)             {javax.swing.JOptionPane.showMessageDialog
                                 (null,"Has perdido\n"
                                  +"Fin.\n","Fin del juego",javax.swing.JOptionPane.OK_OPTION);
                                paso.cancel();
                                puntos=0;
                                nivel=0;
                                cont=0;        
                                return;}
                                
       for(int y=0;y<dimy;y++)
               {  boolean completo=true;
                  for(int x=0;x<dimx;x++)if (matris[x][y].getBackground().equals(new Color(240,240,240))) completo=false;
                if (completo){  
                    
                                    for(int z=y;z>0;z--)
                                    for(int j=0;j<dimx;j++)  matris[j][z].setBackground(matris[j][z-1].getBackground());                
                                    puntos+=10;   
                                    if (puntos>100){puntos=0;nivel++;}
                                    jLabel2.setText(puntos+"");
                                    jLabel4.setText(nivel+"");
                                            
                }                
                      
                             
                    
               }   
       
       
       int r=(int)(ran.nextFloat()*6);
           
       if (f.detenida) { if (r==0) f=new I(matris);
                         if (r==1) f=new O(matris); 
                         if (r==2) f=new Z(matris); 
                         if (r==3) f=new L(matris); 
                         if (r==4) f=new T(matris);
                         if (r==5) f=new S(matris);
                           }
       else {f.baja();cont=0;}
                      
       
       for(int x=0;x<dimx;x++)
           for(int y=0;y<dimy;y++)
            if (matris[x][y].getBackground().equals(new Color(240,240,240))) matris[x][y].setVisible(false);
            else matris[x][y].setVisible(true);
       
       }};
       paso.schedule(baja,0,500);
       
      this.setLocationRelativeTo(null);
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Tablero = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tablero.setBackground(new java.awt.Color(0, 0, 204));
        Tablero.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(Tablero, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 400, 540));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Comenzar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Puntos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Nivel");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
     if  ( evt.getKeyCode()==KeyEvent.VK_DOWN) f.baja();
     if  (evt.getKeyCode()==KeyEvent.VK_RIGHT) f.der();
     if  (evt.getKeyCode()==KeyEvent.VK_LEFT)  f.izq();
     if  (evt.getKeyCode()==KeyEvent.VK_UP) f.gira();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        paso.cancel();
        Tablero.removeAll();
        puntos=0;         
        cont=0;
        nivel=0;
        matris=new JButton[dimx][dimy];
        for(int x=0;x<dimx;x++)
        for(int y=0;y<dimy;y++)
        {matris[x][y]=new JButton();
         matris[x][y].setBackground(new Color(240,240,240));
         Tablero.add(matris[x][y],new org.netbeans.lib.awtextra.AbsoluteConstraints(x*20, y*20, 25, 25));
        
         }   
       
       f=new L(matris);
       f.baja();
      
       paso=new Timer();
      
       baja=new TimerTask() { public void run() {
           if (!clip.isActive()) try {
                audio2 = AudioSystem.getAudioInputStream(getClass().getResourceAsStream("/tetris/tetris.wav"));
                clip = AudioSystem.getClip();
                clip.open(audio2);
                clip.start();
                
            } catch (Exception ex) {
                ex.printStackTrace();
            } 
              
        for(int x=0;x<dimx;x++) if (!matris[x][0].getBackground().equals(new Color(240,240,240))) cont++;
                                
        if (cont>5)             {javax.swing.JOptionPane.showMessageDialog
                                 (null,"Has perdido\n"
                                  +"Fin.\n","Fin del juego",javax.swing.JOptionPane.OK_OPTION);
                                paso.cancel();
                                puntos=0;
                                nivel=0;
                                cont=0;
                                return;}
                               
       for(int y=0;y<dimy;y++)
               {  boolean completo=true;
                  for(int x=0;x<dimx;x++)if (matris[x][y].getBackground().equals(new Color(240,240,240))) completo=false;
                if (completo){  
                    
                                    for(int z=y;z>0;z--)
                                    for(int j=0;j<dimx;j++)  matris[j][z].setBackground(matris[j][z-1].getBackground());                
                                    puntos+=10;   
                                    if (puntos>100){puntos=0;nivel++;}
                                    jLabel2.setText(puntos+"");
                                    jLabel4.setText(nivel+"");
                              }                
                      
                             
                    
               }   
       
       
       int r=(int)(ran.nextFloat()*6);
           
       if (f.detenida) { if (r==0) f=new I(matris);
                         if (r==1) f=new O(matris); 
                         if (r==2) f=new Z(matris); 
                         if (r==3) f=new L(matris); 
                         if (r==4) f=new T(matris);
                         if (r==5) f=new S(matris);
                           }
       else {f.baja();cont=0;}
                      
       
       for(int x=0;x<dimx;x++)
           for(int y=0;y<dimy;y++)
            if (matris[x][y].getBackground().equals(new Color(240,240,240))) matris[x][y].setVisible(false);
            else matris[x][y].setVisible(true);
       
       }};
       paso.schedule(baja,0,500);
       
      this.setLocationRelativeTo(null);
        


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tetris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tetris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tetris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tetris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tetris().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Tablero;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

}
